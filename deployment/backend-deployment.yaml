apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -o ./deployment
    kompose.version: 1.34.0 (HEAD)
    traefik.enable: "true"
    traefik.http.routers.backend.entrypoints: default
    traefik.http.routers.backend.priority: "2"
    traefik.http.routers.backend.rule: PathPrefix(`/api`) || PathPrefix(`/swagger`)
    traefik.http.services.backend.loadbalancer.server.port: "3000"
  labels:
    io.kompose.service: backend
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: backend
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -o ./deployment
        kompose.version: 1.34.0 (HEAD)
        traefik.enable: "true"
        traefik.http.routers.backend.entrypoints: default
        traefik.http.routers.backend.priority: "2"
        traefik.http.routers.backend.rule: PathPrefix(`/api`) || PathPrefix(`/swagger`)
        traefik.http.services.backend.loadbalancer.server.port: "3000"
      labels:
        io.kompose.service: backend
    spec:
      containers:
        - env:
            - name: DATABASE_TYPE
              valueFrom:
                secretKeyRef:
                  name: database-secret
                  key: database-type
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: database-secret
                  key: database-user
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-secret
                  key: database-password
            - name: DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: database-secret
                  key: database-host
            - name: DATABASE_PORT
              valueFrom:
                secretKeyRef:
                  name: database-secret
                  key: database-port
            - name: DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: database-secret
                  key: database-name
            - name: DATABASE_URL
              value: '$(DATABASE_TYPE)://$(DATABASE_USER):$(DATABASE_PASSWORD)@$(DATABASE_HOST):$(DATABASE_PORT)/$(DATABASE_NAME)'
            - name: WAIT_HOSTS
              value: $(DATABASE_HOST):$(DATABASE_PORT)
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: backend-secret
                  key: secret-key
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: backend-secret
                  key: jwt-secret

          image: ghcr.io/jonathanxdr/notes-backend:latest
          name: backend
          ports:
            - containerPort: 3000
              protocol: TCP
      restartPolicy: Always
